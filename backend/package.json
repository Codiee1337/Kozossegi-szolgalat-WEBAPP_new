{
  "name": "api",
  "version": "1.0.0",
  "description": "- [x] Login rendszer   - [x] AlreadyLoggedIn   - [x] Password verification    - [x] Email verification   - [x] User verification (Login)   - [x] Logout   - [x] Session elindítása   - [x] Session törlése logoutkor   - [ ] Session IDLE limit megadása. (6 óra a maximális fenttartható session time!)   - [ ] Jelszó visszaállítás   - [ ] Response helyes megírása   - [X] Errorok kezelése - [x] Regisztrációs rendszer   - [X] AlreadyLoggedIn   - [X] Password verification   - [X] Email verification   - [X] Duplikált email esetén nem enged regisztrálni   - [ ] Session elindítása (Egyből login) (?)   - [ ] Email check (Email kiküldése, verify mezőbe visszakérés majd elfogadás és csak utánna regelés)   - [X] Response helyes megírása - [] Admin   - [ ] Admin route a backendben   - [ ] Admin middleware   - [ ] Admin adatbázis szerkezet kigondolása/megvalósítása - [ ] Tanár   - [ ] Tanár route a backendben   - [ ] Tanár middleware   - [ ] Tanár adatbázis szerkezet kigondolása/megvalósítása - [ ] Diák   - [ ] Diák route a backendben   - [ ] Diák middleware   - [ ] Diák adatbázis szerkezet kigondolása/megvalósítása",
  "main": "index.js",
  "scripts": {
    "postup": "npm run dev",
    "stop": "docker-compose stop",
    "down": "docker-compose down",
    "dev": "npm run dev --prefix api"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "connect-redis": "^5.2.0",
    "express": "^4.17.1",
    "express-session": "^1.17.1",
    "http-proxy-middleware": "^2.0.0",
    "ioredis": "^4.27.2",
    "mongodb": "^3.6.6",
    "mongoose": "^5.12.9"
  },
  "devDependencies": {
    "@types/connect-redis": "^0.0.16",
    "@types/express": "^4.17.11",
    "@types/express-session": "^1.17.3",
    "@types/ioredis": "^4.26.4",
    "@types/mongodb": "^3.6.12",
    "@types/mongoose": "^5.10.5",
    "@types/node": "^15.3.0",
    "ts-node-dev": "^1.1.6",
    "typescript": "^4.3.2"
  }
}
